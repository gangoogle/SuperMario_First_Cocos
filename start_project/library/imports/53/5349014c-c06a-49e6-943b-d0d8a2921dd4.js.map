{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,kBAAU,EAAC,CAAC;AACZ,oBAAY,EAAC,CAAC;AACd,oBAAY,EAAC,CAAC;AACd,aAAK,EAAC,CAAC;KACV;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACvC,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACrC,YAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,YAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,YAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChB,YAAI,CAAC,eAAe,EAAE,CAAC;KAC1B;;;AAKD,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAG,IAAI,CAAC,OAAO,EAAC;AACZ,gBAAI,CAAC,MAAM,IAAE,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;SAC9B,MAAK,IAAG,IAAI,CAAC,QAAQ,EAAC;AACnB,gBAAI,CAAC,MAAM,IAAG,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;SAC/B,MAAI;AACD,gBAAG,IAAI,CAAC,MAAM,IAAE,CAAC,EAAC;AACd,kBAAE,CAAC,GAAG,CAAC,OAAO,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5B,oBAAG,IAAI,CAAC,MAAM,GAAC,CAAC,EAAC;AACb,wBAAI,CAAC,MAAM,IAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC,CAAC;AACrC,wBAAG,IAAI,CAAC,MAAM,GAAC,CAAC,EAAC;AACb,4BAAI,CAAC,MAAM,GAAC,CAAC,CAAC;qBACjB;iBACJ,MAAK,IAAG,IAAI,CAAC,MAAM,GAAC,CAAC,EAAC;AACnB,wBAAI,CAAC,MAAM,IAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC,CAAC;AACnC,wBAAG,IAAI,CAAC,MAAM,GAAC,CAAC,EAAC;AACf,4BAAI,CAAC,MAAM,GAAC,CAAC,CAAC;qBACjB;iBACJ;aACJ;SACJ;AACD,YAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAC,IAAI,CAAC,YAAY,EAAC;AACvC,gBAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACrE;;AAED,YAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAC,EAAE,CAAC;KACjC;;AAGD,iBAAa,EAAC,yBAAU;AACpB,YAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,CAAC;AACrG,YAAI,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACpG,eAAO,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC,CAAC;KACzD;;AAEA,mBAAe,EAAE,2BAAY;AAC1B,YAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,UAAE,CAAC,YAAY,CAAC,WAAW,CAAC;AACxB,iBAAK,EAAE,EAAE,CAAC,aAAa,CAAC,QAAQ;;AAEhC,wBAAY,EAAE,sBAAS,OAAO,EAAE,KAAK,EAAE;AACnC,wBAAO,OAAO;AACV,yBAAK,EAAE,CAAC,GAAG,CAAC,CAAC;AACT,4BAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,4BAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,8BAAM;AAAA,AACV,yBAAK,EAAE,CAAC,GAAG,CAAC,CAAC;AACT,4BAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,4BAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,8BAAM;AAAA,iBACb;aACJ;;AAED,yBAAa,EAAE,uBAAS,OAAO,EAAE,KAAK,EAAE;AACpC,wBAAO,OAAO;AACV,yBAAK,EAAE,CAAC,GAAG,CAAC,CAAC;AACT,4BAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,8BAAM;AAAA,AACV,yBAAK,EAAE,CAAC,GAAG,CAAC,CAAC;AACT,4BAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,8BAAM;AAAA,iBACb;aACJ;SACJ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACjB;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        jumpHeight:0,\r\n        jumpDuration:0,\r\n        maxMoveSpeed:0,\r\n        accel:0,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n        this.accLeft = false;\r\n        this.acctRight = false;\r\n        this.xSpeed = 0; \r\n        this.setInputControl();\r\n    },\r\n    \r\n    \r\n    \r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this.accLeft){\r\n            this.xSpeed-=this.accel*dt;\r\n        }else if(this.accRight){\r\n            this.xSpeed+= this.accel*dt;\r\n        }else{\r\n            if(this.xSpeed!=0){\r\n                cc.log(\"speed\",this.xSpeed);\r\n                if(this.xSpeed>0){\r\n                    this.xSpeed-=Math.abs(this.accel*dt);\r\n                    if(this.xSpeed<0){\r\n                        this.xSpeed=0;\r\n                    }\r\n                }else if(this.xSpeed<0){\r\n                    this.xSpeed+=Math.abs(this.accel*dt);\r\n                      if(this.xSpeed>0){\r\n                        this.xSpeed=0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(Math.abs(this.xSpeed)>this.maxMoveSpeed){\r\n            this.xSpeed = this.maxMoveSpeed*this.xSpeed/Math.abs(this.xSpeed);\r\n        }\r\n \r\n        this.node.x += this.xSpeed*dt;\r\n    },\r\n    \r\n    \r\n    setJumpAction:function(){\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0,this.jumpHeight)).easing(cc.easeCubicActionInOut());\r\n        var jumpDown = cc.moveBy(this.jumpDuration,cc.p(0,-this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        return cc.repeatForever(cc.sequence(jumpUp,jumpDown));\r\n    },\r\n      \r\n     setInputControl: function () {\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n            onKeyPressed: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n            // 松开按键时，停止向该方向的加速\r\n            onKeyReleased: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        }, self.node);\r\n    },\r\n});\r\n"
  ]
}